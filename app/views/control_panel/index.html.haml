:javascript
  g_command_buttons={};
  g_mode = "view";
  kButtonIdPrefix = "command_button_";

  function ButtonEditor(edit_dialog) {
    this.save_callback = null;
    this.edit_dialog = edit_dialog;
    var self = this;
    $("#save_button", this.edit_dialog).click(function() {
      self.on_save();
    });
    $("#test_button", this.edit_dialog).click(function() {
      self.on_test();
    });
    $("#cancel_button", this.edit_dialog).click(function() {
      self.on_cancel();
    });

    this.edit = function(save_callback, current_name, current_script) {
      // Edit a new button.
      $("#name_input", this.edit_dialog).val(current_name);
      $("#edit_input", this.edit_dialog).val(current_script);
      $("#edit_output", this.edit_dialog).val("");
      this.save_callback = save_callback;
      edit_dialog.show();
    }
    
    this.close_dialog = function() {
      $("#command_buttons button").unbind('click');
      edit_dialog.hide();
    }

    this.on_save = function() {
      var self = this;
      this.save_callback(
        $("#name_input", this.edit_dialog).val(),
        $("#edit_input", this.edit_dialog).val(),
        function (data) {
          self.close_dialog();
        });
    }

    this.on_test = function() {
      run_command($("#edit_input", this.edit_dialog),
                  $("#edit_output", this.edit_dialog));
    }

    this.on_cancel = function () {
      this.close_dialog();
    }
  }

  function update_commands() {
    default_communicator.get("/control_panel/get_commands",
      function (data) {
        g_command_buttons = {};
        add_ui_buttons(data);
      });
  }

  function enable_ui_buttons() {
    $("command_buttons button").unbind('click');
    if (g_mode == "view") {
      $("#command_buttons button").each( function (i, v) {
        var button = $(v);
        var button_id = button.attr('id');
        button.click(function () {
          run_command_text(
            g_command_buttons[button_id]["command"],
            function (result) {
              Logger.log(result);
            });
        });
      });
    } else { //g_mode == "edit"
      $("#command_buttons button").each( function (i, v) {
        var button = $(v);
        var button_id = button.attr('id');
        var button_data = g_command_buttons[button_id];
        button.click(function () {
          var editor = new ButtonEditor($("#editor"));
          editor.edit(function (name, command, on_success) {
            default_communicator.post(
              "/control_panel/update_command",
              {
                "id": button_data['id'],
                "name": name,
                "command": command
              },
              on_success);
            }, 
            "", 
            "");          
        });
      });
    }
  }

  function add_ui_buttons(button_data) {
    var button_list_html = "";
    $.each(button_data, function(i, v) {
      var button_id = kButtonIdPrefix + i;
      g_command_buttons[button_id] = v;
      button_list_html += "<button id='" + button_id
                          + "'>" + v["name"] 
                          + "</button>";
      });
    $("#command_buttons").html(button_list_html);
    $("#command_buttons button").button();
    enable_ui_buttons();
  }

  function edit_mode() {
    $("#view_mode_panel").hide();
    $("#edit_mode_panel").show();
    g_mode = "edit";
  }

  function view_mode() {
    $("#edit_mode_panel").hide();
    $("#view_mode_panel").show();
    g_mode = "view";
  }

  function new_command() {
    var editor = new ButtonEditor($("#editor"));
    editor.edit(function (name, command, on_success) {
      default_communicator.post(
        "/control_panel/add_command",
        {
          "name": name,
          "command": command
        },
        on_success);
    }, 
    "", 
    "");
  }

  $(function () {
    $("#edit_mode_button").button()
      .click(function () {edit_mode();});
    $("#view_mode_button").button()
      .click(function () {view_mode();});
    $("#new_command_button").button()
      .click(function () {new_command();});
    $("#save_button").button();
    $("#test_button").button();
    $("#cancel_button").button();
    view_mode();
    update_commands();
  });

#command_buttons
%hr
#modal_control_panels
  #view_mode_panel
    %button{:id=>"edit_mode_button"} Edit
  #edit_mode_panel
    .instructions Click on a command button to edit it.
    .edit_mode_buttons
      %button{:id=>"view_mode_button"} View
      %button{:id=>"new_command_button"} New Command

#editor{:class=>"dialog"}
  .background
  .panel
    .name_input
      %input{:id=>"name_input"}
    .io_boxes
      .input_frame
        %textarea{:id=>"edit_input"}
      .output_frame
        %textarea{:id=>"edit_output", :readonly=>"true"}
    .controls
      %button{:id=>"save_button"} Save
      %button{:id=>"test_button"} Test
      %button{:id=>"cancel_button"} Cancel