= javascript_include_tag "json2"
= javascript_include_tag "jquery-1.5.1.min.js"
= javascript_include_tag "jquery-ui-1.8.11.custom.min.js"
= javascript_include_tag "jquery-url-parser/jquery.url.js"
= javascript_include_tag "log"
= javascript_include_tag "communicate"
= javascript_include_tag "role"
= javascript_include_tag "signals"
%script{:type => "text/javascript", :src => "/blockly/demos/blockly_compressed.js"}
%script{:type => "text/javascript", :src => "/blockly/generators/javascript.js"}
%script{:type => "text/javascript", :src => "/blockly/generators/javascript/control.js"}
%script{:type => "text/javascript", :src => "/blockly/generators/javascript/text.js"}
%script{:type => "text/javascript", :src => "/blockly/language/en/_messages.js"}
%script{:type => "text/javascript", :src => "/blockly/language/common/control.js"}
%script{:type => "text/javascript", :src => "/blockly/language/common/text.js"}
%script{:type => "text/javascript", :src => "/blockly/language/common/logic.js"}
%script{:type => "text/javascript", :src => "/blockly/language/common/math.js"}
%script{:type => "text/javascript", :src => "/blockly/language/common/variables.js"}
%script{:type =>  "text/javascript", :src=> "/custom_blockly.js"}
%script{:type => "text/javascript", :src => "/roles_to_blockly.js"}

:css
  html, body {
    background-color: #fff;
    margin: 0;
    padding:0;
    overflow: hidden;
  }
  .blocklySvg {
    height: 100%;
    width: 100%;
  }
:javascript
  variable_names = []
  function blockly_init() {
    Handle("GET_VARIABLE_NAMES", function (receiver) {
      receiver(variable_names);
    });
    communicator = new Ajax(
      function(success_response) {
        Blockly.Belphanior.rolesToBlocks(success_response.data);
        Blockly.inject(document.body, {path: '/blockly/'});
        // Let the top-level application know that Blockly is ready.
        window.parent.blocklyLoaded(Blockly);
      },
      function(fail_response) {
        $("#error").html(fail_response.long_description);
      });
    communicator.get("/variable/get",
      function (success_response) {
        $.each(success_response.data, function(idx, variable) {
          variable_names.push(variable['name']);
        });
      });
    communicator.get("/documentation/get");
  }

%body{:onload => "blockly_init()"}
  #error